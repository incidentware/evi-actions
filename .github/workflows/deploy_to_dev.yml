name: Deploy branch to Dev environment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_REPO_ROBOT_SECRET }}
      - name: Log in to Scaleway Container Registry
        run: |
          ARTIFACTORY_ENV=staging
          REPO_NAME="$(basename ${{ github.repository }})"
          echo "CONTAINER_PATH=rg.${{ secrets.SCW_REGION }}.scw.cloud/${{secrets.SCW_NAMESPACE}}-${ARTIFACTORY_ENV}/${REPO_NAME}:${{github.sha}}" >> $GITHUB_ENV
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV
          echo "ARTIFACTORY_ENV=${ARTIFACTORY_ENV}" >> $GITHUB_ENV
          echo ${{secrets.SCW_SECRET_KEY}} | docker login rg.${{secrets.SCW_REGION}}.scw.cloud -u ${{secrets.SCW_ACCESS_KEY}} --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build --build-arg BUILD_ENVIRONMENT=${ARTIFACTORY_ENV} -t $CONTAINER_PATH .

      - name: Push Docker Image to Docker Hub for main branch
        run: |
          docker push $CONTAINER_PATH

      - name: Checkout deployed configuration
        uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_REPO_ROBOT_SECRET }}
 
        with:
          repository: incidentware/kubeconfigs
          ref: main
          path: kubeconfigs
          token: ${{ secrets.ORG_REPO_ROBOT_SECRET }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy container
        run: |
          GH_TOKEN=${{ secrets.ORG_REPO_ROBOT_SECRET }}
          mkdir $HOME/.kube
          echo "${{secrets.SCW_KUBECONFIG}}" > $HOME/.kube/config
          cd $GITHUB_WORKSPACE/kubeconfigs
          git config user.name "${{secrets.ORG_REPO_ROBOT_USERNAME}}"
          git config user.email "${{secrets.ORG_REPO_ROBOT_EMAIL}}"
          python3 update.py --environment ${{github.event.inputs.environment}} --service ${REPO_NAME} --new-image $CONTAINER_PATH
          kubectl apply -f ${{github.event.inputs.environment}}/services/${REPO_NAME}.yaml
          kubectl apply --wait --timeout=90s -f ${{github.event.inputs.environment}}/deployments/${REPO_NAME}.yaml

          git add ${{github.event.inputs.environment}}
          git commit -m "Updated ${REPO_NAME} in environment ${{github.event.inputs.environment}} with container ${CONTAINER_PATH}" -a
          git push
          cd $GITHUB_WORKSPACE

      - name: Finalize
        run: |
          echo "Job complete! You can test your deployment with url https://${{github.event.inputs.environment}}.evist.ai"
